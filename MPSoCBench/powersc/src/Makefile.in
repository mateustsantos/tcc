# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = src
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libpowersc_a_AR = $(AR) $(ARFLAGS)
libpowersc_a_LIBADD =
am_libpowersc_a_OBJECTS = libpowersc_a-powersc.$(OBJEXT) \
	libpowersc_a-psc_sampler.$(OBJEXT) \
	libpowersc_a-psc_obj_rep.$(OBJEXT) \
	libpowersc_a-psc_bit.$(OBJEXT) \
	libpowersc_a-psc_signal_bool.$(OBJEXT) \
	libpowersc_a-psc_clock.$(OBJEXT) \
	libpowersc_a-psc_logic.$(OBJEXT) \
	libpowersc_a-psc_randgen.$(OBJEXT) \
	libpowersc_a-psc_tables.$(OBJEXT) \
	libpowersc_a-psc_misc.$(OBJEXT) \
	libpowersc_a-psc_interp.$(OBJEXT) \
	libpowersc_a-psc_techlib.$(OBJEXT) \
	libpowersc_a-psc_macromodel.$(OBJEXT)
nodist_libpowersc_a_OBJECTS = libpowersc_a-sc_bit.$(OBJEXT) \
	libpowersc_a-sc_logic.$(OBJEXT) \
	libpowersc_a-sc_clock.$(OBJEXT) libpowersc_a-sc_wait.$(OBJEXT) \
	libpowersc_a-sc_join.$(OBJEXT)
libpowersc_a_OBJECTS = $(am_libpowersc_a_OBJECTS) \
	$(nodist_libpowersc_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libpowersc_a_SOURCES) $(nodist_libpowersc_a_SOURCES) \
	$(dist_EXTRA_libpowersc_a_SOURCES)
DIST_SOURCES = $(libpowersc_a_SOURCES) \
	$(dist_EXTRA_libpowersc_a_SOURCES)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SCLIB_INCLUDES = @SCLIB_INCLUDES@
SCLIB_SRC_INCLUDES = @SCLIB_SRC_INCLUDES@
SC_COMM_DIR = @SC_COMM_DIR@
SC_DT_BIT_DIR = @SC_DT_BIT_DIR@
SC_KERNEL_DIR = @SC_KERNEL_DIR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WANT_EXAMPLES_FALSE = @WANT_EXAMPLES_FALSE@
WANT_EXAMPLES_TRUE = @WANT_EXAMPLES_TRUE@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
datadir = @datadir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
lib_LIBRARIES = libpowersc.a
INCLUDES = $(SCLIB_INCLUDES) $(SCLIB_SRC_INCLUDES)
include_HEADERS = base/psc_sampler.h base/psc_base_integer.h base/psc_objinfo.h base/psc_objinfo_if.h base/psc_obj_rep.h base/psc_obj_rep_base.h debug_power.h powersc.h psc_bit.h psc_bv.h psc_clock.h psc_int.h psc_logic.h psc_lv.h psc_sensitive.h psc_signal.h psc_signal_bool.h psc_uint.h utils/psc_randgen.h utils/psc_tables.h utils/psc_misc.h utils/psc_interp.h base/psc_techlib.h base/psc_macromodel.h
libpowersc_a_CXXFLAGS = -Wall -Wno-deprecated -Wno-char-subscripts
dist_EXTRA_libpowersc_a_SOURCES = base/psc_objinfo.cpp psc_bv.cpp psc_int.cpp psc_lv.cpp psc_uint.cpp  
libpowersc_a_SOURCES = powersc.cpp base/psc_sampler.cpp base/psc_obj_rep.cpp psc_bit.cpp psc_signal_bool.cpp psc_clock.cpp psc_logic.cpp utils/psc_randgen.cpp utils/psc_tables.cpp utils/psc_misc.cpp utils/psc_interp.cpp base/psc_techlib.cpp base/psc_macromodel.cpp
nodist_libpowersc_a_SOURCES = $(SC_DT_BIT_DIR)/sc_bit.cpp $(SC_DT_BIT_DIR)/sc_logic.cpp $(SC_COMM_DIR)/sc_clock.cpp $(SC_KERNEL_DIR)/sc_wait.cpp  $(SC_KERNEL_DIR)/sc_join.cpp
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libpowersc.a: $(libpowersc_a_OBJECTS) $(libpowersc_a_DEPENDENCIES) 
	-rm -f libpowersc.a
	$(libpowersc_a_AR) libpowersc.a $(libpowersc_a_OBJECTS) $(libpowersc_a_LIBADD)
	$(RANLIB) libpowersc.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-powersc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_bit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_bv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_clock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_int.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_interp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_logic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_lv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_macromodel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_misc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_obj_rep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_objinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_randgen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_sampler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_signal_bool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_tables.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_techlib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-psc_uint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-sc_bit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-sc_clock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-sc_join.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-sc_logic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libpowersc_a-sc_wait.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libpowersc_a-powersc.o: powersc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-powersc.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-powersc.Tpo" -c -o libpowersc_a-powersc.o `test -f 'powersc.cpp' || echo '$(srcdir)/'`powersc.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-powersc.Tpo" "$(DEPDIR)/libpowersc_a-powersc.Po"; else rm -f "$(DEPDIR)/libpowersc_a-powersc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='powersc.cpp' object='libpowersc_a-powersc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-powersc.o `test -f 'powersc.cpp' || echo '$(srcdir)/'`powersc.cpp

libpowersc_a-powersc.obj: powersc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-powersc.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-powersc.Tpo" -c -o libpowersc_a-powersc.obj `if test -f 'powersc.cpp'; then $(CYGPATH_W) 'powersc.cpp'; else $(CYGPATH_W) '$(srcdir)/powersc.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-powersc.Tpo" "$(DEPDIR)/libpowersc_a-powersc.Po"; else rm -f "$(DEPDIR)/libpowersc_a-powersc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='powersc.cpp' object='libpowersc_a-powersc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-powersc.obj `if test -f 'powersc.cpp'; then $(CYGPATH_W) 'powersc.cpp'; else $(CYGPATH_W) '$(srcdir)/powersc.cpp'; fi`

libpowersc_a-psc_sampler.o: base/psc_sampler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_sampler.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_sampler.Tpo" -c -o libpowersc_a-psc_sampler.o `test -f 'base/psc_sampler.cpp' || echo '$(srcdir)/'`base/psc_sampler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_sampler.Tpo" "$(DEPDIR)/libpowersc_a-psc_sampler.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_sampler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/psc_sampler.cpp' object='libpowersc_a-psc_sampler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_sampler.o `test -f 'base/psc_sampler.cpp' || echo '$(srcdir)/'`base/psc_sampler.cpp

libpowersc_a-psc_sampler.obj: base/psc_sampler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_sampler.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_sampler.Tpo" -c -o libpowersc_a-psc_sampler.obj `if test -f 'base/psc_sampler.cpp'; then $(CYGPATH_W) 'base/psc_sampler.cpp'; else $(CYGPATH_W) '$(srcdir)/base/psc_sampler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_sampler.Tpo" "$(DEPDIR)/libpowersc_a-psc_sampler.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_sampler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/psc_sampler.cpp' object='libpowersc_a-psc_sampler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_sampler.obj `if test -f 'base/psc_sampler.cpp'; then $(CYGPATH_W) 'base/psc_sampler.cpp'; else $(CYGPATH_W) '$(srcdir)/base/psc_sampler.cpp'; fi`

libpowersc_a-psc_obj_rep.o: base/psc_obj_rep.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_obj_rep.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_obj_rep.Tpo" -c -o libpowersc_a-psc_obj_rep.o `test -f 'base/psc_obj_rep.cpp' || echo '$(srcdir)/'`base/psc_obj_rep.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_obj_rep.Tpo" "$(DEPDIR)/libpowersc_a-psc_obj_rep.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_obj_rep.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/psc_obj_rep.cpp' object='libpowersc_a-psc_obj_rep.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_obj_rep.o `test -f 'base/psc_obj_rep.cpp' || echo '$(srcdir)/'`base/psc_obj_rep.cpp

libpowersc_a-psc_obj_rep.obj: base/psc_obj_rep.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_obj_rep.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_obj_rep.Tpo" -c -o libpowersc_a-psc_obj_rep.obj `if test -f 'base/psc_obj_rep.cpp'; then $(CYGPATH_W) 'base/psc_obj_rep.cpp'; else $(CYGPATH_W) '$(srcdir)/base/psc_obj_rep.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_obj_rep.Tpo" "$(DEPDIR)/libpowersc_a-psc_obj_rep.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_obj_rep.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/psc_obj_rep.cpp' object='libpowersc_a-psc_obj_rep.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_obj_rep.obj `if test -f 'base/psc_obj_rep.cpp'; then $(CYGPATH_W) 'base/psc_obj_rep.cpp'; else $(CYGPATH_W) '$(srcdir)/base/psc_obj_rep.cpp'; fi`

libpowersc_a-psc_bit.o: psc_bit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_bit.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_bit.Tpo" -c -o libpowersc_a-psc_bit.o `test -f 'psc_bit.cpp' || echo '$(srcdir)/'`psc_bit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_bit.Tpo" "$(DEPDIR)/libpowersc_a-psc_bit.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_bit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_bit.cpp' object='libpowersc_a-psc_bit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_bit.o `test -f 'psc_bit.cpp' || echo '$(srcdir)/'`psc_bit.cpp

libpowersc_a-psc_bit.obj: psc_bit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_bit.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_bit.Tpo" -c -o libpowersc_a-psc_bit.obj `if test -f 'psc_bit.cpp'; then $(CYGPATH_W) 'psc_bit.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_bit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_bit.Tpo" "$(DEPDIR)/libpowersc_a-psc_bit.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_bit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_bit.cpp' object='libpowersc_a-psc_bit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_bit.obj `if test -f 'psc_bit.cpp'; then $(CYGPATH_W) 'psc_bit.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_bit.cpp'; fi`

libpowersc_a-psc_signal_bool.o: psc_signal_bool.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_signal_bool.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_signal_bool.Tpo" -c -o libpowersc_a-psc_signal_bool.o `test -f 'psc_signal_bool.cpp' || echo '$(srcdir)/'`psc_signal_bool.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_signal_bool.Tpo" "$(DEPDIR)/libpowersc_a-psc_signal_bool.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_signal_bool.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_signal_bool.cpp' object='libpowersc_a-psc_signal_bool.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_signal_bool.o `test -f 'psc_signal_bool.cpp' || echo '$(srcdir)/'`psc_signal_bool.cpp

libpowersc_a-psc_signal_bool.obj: psc_signal_bool.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_signal_bool.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_signal_bool.Tpo" -c -o libpowersc_a-psc_signal_bool.obj `if test -f 'psc_signal_bool.cpp'; then $(CYGPATH_W) 'psc_signal_bool.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_signal_bool.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_signal_bool.Tpo" "$(DEPDIR)/libpowersc_a-psc_signal_bool.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_signal_bool.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_signal_bool.cpp' object='libpowersc_a-psc_signal_bool.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_signal_bool.obj `if test -f 'psc_signal_bool.cpp'; then $(CYGPATH_W) 'psc_signal_bool.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_signal_bool.cpp'; fi`

libpowersc_a-psc_clock.o: psc_clock.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_clock.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_clock.Tpo" -c -o libpowersc_a-psc_clock.o `test -f 'psc_clock.cpp' || echo '$(srcdir)/'`psc_clock.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_clock.Tpo" "$(DEPDIR)/libpowersc_a-psc_clock.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_clock.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_clock.cpp' object='libpowersc_a-psc_clock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_clock.o `test -f 'psc_clock.cpp' || echo '$(srcdir)/'`psc_clock.cpp

libpowersc_a-psc_clock.obj: psc_clock.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_clock.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_clock.Tpo" -c -o libpowersc_a-psc_clock.obj `if test -f 'psc_clock.cpp'; then $(CYGPATH_W) 'psc_clock.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_clock.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_clock.Tpo" "$(DEPDIR)/libpowersc_a-psc_clock.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_clock.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_clock.cpp' object='libpowersc_a-psc_clock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_clock.obj `if test -f 'psc_clock.cpp'; then $(CYGPATH_W) 'psc_clock.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_clock.cpp'; fi`

libpowersc_a-psc_logic.o: psc_logic.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_logic.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_logic.Tpo" -c -o libpowersc_a-psc_logic.o `test -f 'psc_logic.cpp' || echo '$(srcdir)/'`psc_logic.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_logic.Tpo" "$(DEPDIR)/libpowersc_a-psc_logic.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_logic.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_logic.cpp' object='libpowersc_a-psc_logic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_logic.o `test -f 'psc_logic.cpp' || echo '$(srcdir)/'`psc_logic.cpp

libpowersc_a-psc_logic.obj: psc_logic.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_logic.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_logic.Tpo" -c -o libpowersc_a-psc_logic.obj `if test -f 'psc_logic.cpp'; then $(CYGPATH_W) 'psc_logic.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_logic.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_logic.Tpo" "$(DEPDIR)/libpowersc_a-psc_logic.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_logic.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_logic.cpp' object='libpowersc_a-psc_logic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_logic.obj `if test -f 'psc_logic.cpp'; then $(CYGPATH_W) 'psc_logic.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_logic.cpp'; fi`

libpowersc_a-psc_randgen.o: utils/psc_randgen.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_randgen.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_randgen.Tpo" -c -o libpowersc_a-psc_randgen.o `test -f 'utils/psc_randgen.cpp' || echo '$(srcdir)/'`utils/psc_randgen.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_randgen.Tpo" "$(DEPDIR)/libpowersc_a-psc_randgen.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_randgen.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/psc_randgen.cpp' object='libpowersc_a-psc_randgen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_randgen.o `test -f 'utils/psc_randgen.cpp' || echo '$(srcdir)/'`utils/psc_randgen.cpp

libpowersc_a-psc_randgen.obj: utils/psc_randgen.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_randgen.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_randgen.Tpo" -c -o libpowersc_a-psc_randgen.obj `if test -f 'utils/psc_randgen.cpp'; then $(CYGPATH_W) 'utils/psc_randgen.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/psc_randgen.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_randgen.Tpo" "$(DEPDIR)/libpowersc_a-psc_randgen.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_randgen.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/psc_randgen.cpp' object='libpowersc_a-psc_randgen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_randgen.obj `if test -f 'utils/psc_randgen.cpp'; then $(CYGPATH_W) 'utils/psc_randgen.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/psc_randgen.cpp'; fi`

libpowersc_a-psc_tables.o: utils/psc_tables.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_tables.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_tables.Tpo" -c -o libpowersc_a-psc_tables.o `test -f 'utils/psc_tables.cpp' || echo '$(srcdir)/'`utils/psc_tables.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_tables.Tpo" "$(DEPDIR)/libpowersc_a-psc_tables.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_tables.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/psc_tables.cpp' object='libpowersc_a-psc_tables.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_tables.o `test -f 'utils/psc_tables.cpp' || echo '$(srcdir)/'`utils/psc_tables.cpp

libpowersc_a-psc_tables.obj: utils/psc_tables.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_tables.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_tables.Tpo" -c -o libpowersc_a-psc_tables.obj `if test -f 'utils/psc_tables.cpp'; then $(CYGPATH_W) 'utils/psc_tables.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/psc_tables.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_tables.Tpo" "$(DEPDIR)/libpowersc_a-psc_tables.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_tables.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/psc_tables.cpp' object='libpowersc_a-psc_tables.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_tables.obj `if test -f 'utils/psc_tables.cpp'; then $(CYGPATH_W) 'utils/psc_tables.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/psc_tables.cpp'; fi`

libpowersc_a-psc_misc.o: utils/psc_misc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_misc.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_misc.Tpo" -c -o libpowersc_a-psc_misc.o `test -f 'utils/psc_misc.cpp' || echo '$(srcdir)/'`utils/psc_misc.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_misc.Tpo" "$(DEPDIR)/libpowersc_a-psc_misc.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_misc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/psc_misc.cpp' object='libpowersc_a-psc_misc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_misc.o `test -f 'utils/psc_misc.cpp' || echo '$(srcdir)/'`utils/psc_misc.cpp

libpowersc_a-psc_misc.obj: utils/psc_misc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_misc.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_misc.Tpo" -c -o libpowersc_a-psc_misc.obj `if test -f 'utils/psc_misc.cpp'; then $(CYGPATH_W) 'utils/psc_misc.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/psc_misc.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_misc.Tpo" "$(DEPDIR)/libpowersc_a-psc_misc.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_misc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/psc_misc.cpp' object='libpowersc_a-psc_misc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_misc.obj `if test -f 'utils/psc_misc.cpp'; then $(CYGPATH_W) 'utils/psc_misc.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/psc_misc.cpp'; fi`

libpowersc_a-psc_interp.o: utils/psc_interp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_interp.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_interp.Tpo" -c -o libpowersc_a-psc_interp.o `test -f 'utils/psc_interp.cpp' || echo '$(srcdir)/'`utils/psc_interp.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_interp.Tpo" "$(DEPDIR)/libpowersc_a-psc_interp.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_interp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/psc_interp.cpp' object='libpowersc_a-psc_interp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_interp.o `test -f 'utils/psc_interp.cpp' || echo '$(srcdir)/'`utils/psc_interp.cpp

libpowersc_a-psc_interp.obj: utils/psc_interp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_interp.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_interp.Tpo" -c -o libpowersc_a-psc_interp.obj `if test -f 'utils/psc_interp.cpp'; then $(CYGPATH_W) 'utils/psc_interp.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/psc_interp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_interp.Tpo" "$(DEPDIR)/libpowersc_a-psc_interp.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_interp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='utils/psc_interp.cpp' object='libpowersc_a-psc_interp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_interp.obj `if test -f 'utils/psc_interp.cpp'; then $(CYGPATH_W) 'utils/psc_interp.cpp'; else $(CYGPATH_W) '$(srcdir)/utils/psc_interp.cpp'; fi`

libpowersc_a-psc_techlib.o: base/psc_techlib.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_techlib.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_techlib.Tpo" -c -o libpowersc_a-psc_techlib.o `test -f 'base/psc_techlib.cpp' || echo '$(srcdir)/'`base/psc_techlib.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_techlib.Tpo" "$(DEPDIR)/libpowersc_a-psc_techlib.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_techlib.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/psc_techlib.cpp' object='libpowersc_a-psc_techlib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_techlib.o `test -f 'base/psc_techlib.cpp' || echo '$(srcdir)/'`base/psc_techlib.cpp

libpowersc_a-psc_techlib.obj: base/psc_techlib.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_techlib.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_techlib.Tpo" -c -o libpowersc_a-psc_techlib.obj `if test -f 'base/psc_techlib.cpp'; then $(CYGPATH_W) 'base/psc_techlib.cpp'; else $(CYGPATH_W) '$(srcdir)/base/psc_techlib.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_techlib.Tpo" "$(DEPDIR)/libpowersc_a-psc_techlib.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_techlib.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/psc_techlib.cpp' object='libpowersc_a-psc_techlib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_techlib.obj `if test -f 'base/psc_techlib.cpp'; then $(CYGPATH_W) 'base/psc_techlib.cpp'; else $(CYGPATH_W) '$(srcdir)/base/psc_techlib.cpp'; fi`

libpowersc_a-psc_macromodel.o: base/psc_macromodel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_macromodel.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_macromodel.Tpo" -c -o libpowersc_a-psc_macromodel.o `test -f 'base/psc_macromodel.cpp' || echo '$(srcdir)/'`base/psc_macromodel.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_macromodel.Tpo" "$(DEPDIR)/libpowersc_a-psc_macromodel.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_macromodel.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/psc_macromodel.cpp' object='libpowersc_a-psc_macromodel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_macromodel.o `test -f 'base/psc_macromodel.cpp' || echo '$(srcdir)/'`base/psc_macromodel.cpp

libpowersc_a-psc_macromodel.obj: base/psc_macromodel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_macromodel.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_macromodel.Tpo" -c -o libpowersc_a-psc_macromodel.obj `if test -f 'base/psc_macromodel.cpp'; then $(CYGPATH_W) 'base/psc_macromodel.cpp'; else $(CYGPATH_W) '$(srcdir)/base/psc_macromodel.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_macromodel.Tpo" "$(DEPDIR)/libpowersc_a-psc_macromodel.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_macromodel.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/psc_macromodel.cpp' object='libpowersc_a-psc_macromodel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_macromodel.obj `if test -f 'base/psc_macromodel.cpp'; then $(CYGPATH_W) 'base/psc_macromodel.cpp'; else $(CYGPATH_W) '$(srcdir)/base/psc_macromodel.cpp'; fi`

libpowersc_a-sc_bit.o: $(SC_DT_BIT_DIR)/sc_bit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-sc_bit.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-sc_bit.Tpo" -c -o libpowersc_a-sc_bit.o `test -f '$(SC_DT_BIT_DIR)/sc_bit.cpp' || echo '$(srcdir)/'`$(SC_DT_BIT_DIR)/sc_bit.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-sc_bit.Tpo" "$(DEPDIR)/libpowersc_a-sc_bit.Po"; else rm -f "$(DEPDIR)/libpowersc_a-sc_bit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SC_DT_BIT_DIR)/sc_bit.cpp' object='libpowersc_a-sc_bit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-sc_bit.o `test -f '$(SC_DT_BIT_DIR)/sc_bit.cpp' || echo '$(srcdir)/'`$(SC_DT_BIT_DIR)/sc_bit.cpp

libpowersc_a-sc_bit.obj: $(SC_DT_BIT_DIR)/sc_bit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-sc_bit.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-sc_bit.Tpo" -c -o libpowersc_a-sc_bit.obj `if test -f '$(SC_DT_BIT_DIR)/sc_bit.cpp'; then $(CYGPATH_W) '$(SC_DT_BIT_DIR)/sc_bit.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SC_DT_BIT_DIR)/sc_bit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-sc_bit.Tpo" "$(DEPDIR)/libpowersc_a-sc_bit.Po"; else rm -f "$(DEPDIR)/libpowersc_a-sc_bit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SC_DT_BIT_DIR)/sc_bit.cpp' object='libpowersc_a-sc_bit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-sc_bit.obj `if test -f '$(SC_DT_BIT_DIR)/sc_bit.cpp'; then $(CYGPATH_W) '$(SC_DT_BIT_DIR)/sc_bit.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SC_DT_BIT_DIR)/sc_bit.cpp'; fi`

libpowersc_a-sc_logic.o: $(SC_DT_BIT_DIR)/sc_logic.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-sc_logic.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-sc_logic.Tpo" -c -o libpowersc_a-sc_logic.o `test -f '$(SC_DT_BIT_DIR)/sc_logic.cpp' || echo '$(srcdir)/'`$(SC_DT_BIT_DIR)/sc_logic.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-sc_logic.Tpo" "$(DEPDIR)/libpowersc_a-sc_logic.Po"; else rm -f "$(DEPDIR)/libpowersc_a-sc_logic.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SC_DT_BIT_DIR)/sc_logic.cpp' object='libpowersc_a-sc_logic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-sc_logic.o `test -f '$(SC_DT_BIT_DIR)/sc_logic.cpp' || echo '$(srcdir)/'`$(SC_DT_BIT_DIR)/sc_logic.cpp

libpowersc_a-sc_logic.obj: $(SC_DT_BIT_DIR)/sc_logic.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-sc_logic.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-sc_logic.Tpo" -c -o libpowersc_a-sc_logic.obj `if test -f '$(SC_DT_BIT_DIR)/sc_logic.cpp'; then $(CYGPATH_W) '$(SC_DT_BIT_DIR)/sc_logic.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SC_DT_BIT_DIR)/sc_logic.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-sc_logic.Tpo" "$(DEPDIR)/libpowersc_a-sc_logic.Po"; else rm -f "$(DEPDIR)/libpowersc_a-sc_logic.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SC_DT_BIT_DIR)/sc_logic.cpp' object='libpowersc_a-sc_logic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-sc_logic.obj `if test -f '$(SC_DT_BIT_DIR)/sc_logic.cpp'; then $(CYGPATH_W) '$(SC_DT_BIT_DIR)/sc_logic.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SC_DT_BIT_DIR)/sc_logic.cpp'; fi`

libpowersc_a-sc_clock.o: $(SC_COMM_DIR)/sc_clock.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-sc_clock.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-sc_clock.Tpo" -c -o libpowersc_a-sc_clock.o `test -f '$(SC_COMM_DIR)/sc_clock.cpp' || echo '$(srcdir)/'`$(SC_COMM_DIR)/sc_clock.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-sc_clock.Tpo" "$(DEPDIR)/libpowersc_a-sc_clock.Po"; else rm -f "$(DEPDIR)/libpowersc_a-sc_clock.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SC_COMM_DIR)/sc_clock.cpp' object='libpowersc_a-sc_clock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-sc_clock.o `test -f '$(SC_COMM_DIR)/sc_clock.cpp' || echo '$(srcdir)/'`$(SC_COMM_DIR)/sc_clock.cpp

libpowersc_a-sc_clock.obj: $(SC_COMM_DIR)/sc_clock.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-sc_clock.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-sc_clock.Tpo" -c -o libpowersc_a-sc_clock.obj `if test -f '$(SC_COMM_DIR)/sc_clock.cpp'; then $(CYGPATH_W) '$(SC_COMM_DIR)/sc_clock.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SC_COMM_DIR)/sc_clock.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-sc_clock.Tpo" "$(DEPDIR)/libpowersc_a-sc_clock.Po"; else rm -f "$(DEPDIR)/libpowersc_a-sc_clock.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SC_COMM_DIR)/sc_clock.cpp' object='libpowersc_a-sc_clock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-sc_clock.obj `if test -f '$(SC_COMM_DIR)/sc_clock.cpp'; then $(CYGPATH_W) '$(SC_COMM_DIR)/sc_clock.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SC_COMM_DIR)/sc_clock.cpp'; fi`

libpowersc_a-sc_wait.o: $(SC_KERNEL_DIR)/sc_wait.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-sc_wait.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-sc_wait.Tpo" -c -o libpowersc_a-sc_wait.o `test -f '$(SC_KERNEL_DIR)/sc_wait.cpp' || echo '$(srcdir)/'`$(SC_KERNEL_DIR)/sc_wait.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-sc_wait.Tpo" "$(DEPDIR)/libpowersc_a-sc_wait.Po"; else rm -f "$(DEPDIR)/libpowersc_a-sc_wait.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SC_KERNEL_DIR)/sc_wait.cpp' object='libpowersc_a-sc_wait.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-sc_wait.o `test -f '$(SC_KERNEL_DIR)/sc_wait.cpp' || echo '$(srcdir)/'`$(SC_KERNEL_DIR)/sc_wait.cpp

libpowersc_a-sc_wait.obj: $(SC_KERNEL_DIR)/sc_wait.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-sc_wait.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-sc_wait.Tpo" -c -o libpowersc_a-sc_wait.obj `if test -f '$(SC_KERNEL_DIR)/sc_wait.cpp'; then $(CYGPATH_W) '$(SC_KERNEL_DIR)/sc_wait.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SC_KERNEL_DIR)/sc_wait.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-sc_wait.Tpo" "$(DEPDIR)/libpowersc_a-sc_wait.Po"; else rm -f "$(DEPDIR)/libpowersc_a-sc_wait.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SC_KERNEL_DIR)/sc_wait.cpp' object='libpowersc_a-sc_wait.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-sc_wait.obj `if test -f '$(SC_KERNEL_DIR)/sc_wait.cpp'; then $(CYGPATH_W) '$(SC_KERNEL_DIR)/sc_wait.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SC_KERNEL_DIR)/sc_wait.cpp'; fi`

libpowersc_a-sc_join.o: $(SC_KERNEL_DIR)/sc_join.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-sc_join.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-sc_join.Tpo" -c -o libpowersc_a-sc_join.o `test -f '$(SC_KERNEL_DIR)/sc_join.cpp' || echo '$(srcdir)/'`$(SC_KERNEL_DIR)/sc_join.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-sc_join.Tpo" "$(DEPDIR)/libpowersc_a-sc_join.Po"; else rm -f "$(DEPDIR)/libpowersc_a-sc_join.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SC_KERNEL_DIR)/sc_join.cpp' object='libpowersc_a-sc_join.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-sc_join.o `test -f '$(SC_KERNEL_DIR)/sc_join.cpp' || echo '$(srcdir)/'`$(SC_KERNEL_DIR)/sc_join.cpp

libpowersc_a-sc_join.obj: $(SC_KERNEL_DIR)/sc_join.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-sc_join.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-sc_join.Tpo" -c -o libpowersc_a-sc_join.obj `if test -f '$(SC_KERNEL_DIR)/sc_join.cpp'; then $(CYGPATH_W) '$(SC_KERNEL_DIR)/sc_join.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SC_KERNEL_DIR)/sc_join.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-sc_join.Tpo" "$(DEPDIR)/libpowersc_a-sc_join.Po"; else rm -f "$(DEPDIR)/libpowersc_a-sc_join.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SC_KERNEL_DIR)/sc_join.cpp' object='libpowersc_a-sc_join.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-sc_join.obj `if test -f '$(SC_KERNEL_DIR)/sc_join.cpp'; then $(CYGPATH_W) '$(SC_KERNEL_DIR)/sc_join.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SC_KERNEL_DIR)/sc_join.cpp'; fi`

libpowersc_a-psc_objinfo.o: base/psc_objinfo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_objinfo.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_objinfo.Tpo" -c -o libpowersc_a-psc_objinfo.o `test -f 'base/psc_objinfo.cpp' || echo '$(srcdir)/'`base/psc_objinfo.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_objinfo.Tpo" "$(DEPDIR)/libpowersc_a-psc_objinfo.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_objinfo.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/psc_objinfo.cpp' object='libpowersc_a-psc_objinfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_objinfo.o `test -f 'base/psc_objinfo.cpp' || echo '$(srcdir)/'`base/psc_objinfo.cpp

libpowersc_a-psc_objinfo.obj: base/psc_objinfo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_objinfo.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_objinfo.Tpo" -c -o libpowersc_a-psc_objinfo.obj `if test -f 'base/psc_objinfo.cpp'; then $(CYGPATH_W) 'base/psc_objinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/base/psc_objinfo.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_objinfo.Tpo" "$(DEPDIR)/libpowersc_a-psc_objinfo.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_objinfo.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base/psc_objinfo.cpp' object='libpowersc_a-psc_objinfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_objinfo.obj `if test -f 'base/psc_objinfo.cpp'; then $(CYGPATH_W) 'base/psc_objinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/base/psc_objinfo.cpp'; fi`

libpowersc_a-psc_bv.o: psc_bv.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_bv.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_bv.Tpo" -c -o libpowersc_a-psc_bv.o `test -f 'psc_bv.cpp' || echo '$(srcdir)/'`psc_bv.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_bv.Tpo" "$(DEPDIR)/libpowersc_a-psc_bv.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_bv.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_bv.cpp' object='libpowersc_a-psc_bv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_bv.o `test -f 'psc_bv.cpp' || echo '$(srcdir)/'`psc_bv.cpp

libpowersc_a-psc_bv.obj: psc_bv.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_bv.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_bv.Tpo" -c -o libpowersc_a-psc_bv.obj `if test -f 'psc_bv.cpp'; then $(CYGPATH_W) 'psc_bv.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_bv.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_bv.Tpo" "$(DEPDIR)/libpowersc_a-psc_bv.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_bv.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_bv.cpp' object='libpowersc_a-psc_bv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_bv.obj `if test -f 'psc_bv.cpp'; then $(CYGPATH_W) 'psc_bv.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_bv.cpp'; fi`

libpowersc_a-psc_int.o: psc_int.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_int.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_int.Tpo" -c -o libpowersc_a-psc_int.o `test -f 'psc_int.cpp' || echo '$(srcdir)/'`psc_int.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_int.Tpo" "$(DEPDIR)/libpowersc_a-psc_int.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_int.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_int.cpp' object='libpowersc_a-psc_int.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_int.o `test -f 'psc_int.cpp' || echo '$(srcdir)/'`psc_int.cpp

libpowersc_a-psc_int.obj: psc_int.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_int.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_int.Tpo" -c -o libpowersc_a-psc_int.obj `if test -f 'psc_int.cpp'; then $(CYGPATH_W) 'psc_int.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_int.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_int.Tpo" "$(DEPDIR)/libpowersc_a-psc_int.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_int.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_int.cpp' object='libpowersc_a-psc_int.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_int.obj `if test -f 'psc_int.cpp'; then $(CYGPATH_W) 'psc_int.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_int.cpp'; fi`

libpowersc_a-psc_lv.o: psc_lv.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_lv.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_lv.Tpo" -c -o libpowersc_a-psc_lv.o `test -f 'psc_lv.cpp' || echo '$(srcdir)/'`psc_lv.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_lv.Tpo" "$(DEPDIR)/libpowersc_a-psc_lv.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_lv.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_lv.cpp' object='libpowersc_a-psc_lv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_lv.o `test -f 'psc_lv.cpp' || echo '$(srcdir)/'`psc_lv.cpp

libpowersc_a-psc_lv.obj: psc_lv.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_lv.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_lv.Tpo" -c -o libpowersc_a-psc_lv.obj `if test -f 'psc_lv.cpp'; then $(CYGPATH_W) 'psc_lv.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_lv.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_lv.Tpo" "$(DEPDIR)/libpowersc_a-psc_lv.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_lv.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_lv.cpp' object='libpowersc_a-psc_lv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_lv.obj `if test -f 'psc_lv.cpp'; then $(CYGPATH_W) 'psc_lv.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_lv.cpp'; fi`

libpowersc_a-psc_uint.o: psc_uint.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_uint.o -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_uint.Tpo" -c -o libpowersc_a-psc_uint.o `test -f 'psc_uint.cpp' || echo '$(srcdir)/'`psc_uint.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_uint.Tpo" "$(DEPDIR)/libpowersc_a-psc_uint.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_uint.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_uint.cpp' object='libpowersc_a-psc_uint.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_uint.o `test -f 'psc_uint.cpp' || echo '$(srcdir)/'`psc_uint.cpp

libpowersc_a-psc_uint.obj: psc_uint.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -MT libpowersc_a-psc_uint.obj -MD -MP -MF "$(DEPDIR)/libpowersc_a-psc_uint.Tpo" -c -o libpowersc_a-psc_uint.obj `if test -f 'psc_uint.cpp'; then $(CYGPATH_W) 'psc_uint.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_uint.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libpowersc_a-psc_uint.Tpo" "$(DEPDIR)/libpowersc_a-psc_uint.Po"; else rm -f "$(DEPDIR)/libpowersc_a-psc_uint.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='psc_uint.cpp' object='libpowersc_a-psc_uint.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpowersc_a_CXXFLAGS) $(CXXFLAGS) -c -o libpowersc_a-psc_uint.obj `if test -f 'psc_uint.cpp'; then $(CYGPATH_W) 'psc_uint.cpp'; else $(CYGPATH_W) '$(srcdir)/psc_uint.cpp'; fi`
uninstall-info-am:
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/base $(distdir)/utils
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-exec-am: install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
