/******************************************************
 * ArchC Resources header file.                       *
 * This file is automatically generated by ArchC      *
 * WITHOUT WARRANTY OF ANY KIND, either express       *
 * or implied.                                        *
 * For more information on ArchC, please visit:       *
 * http://www.archc.org                               *
 *                                                    *
 * The ArchC Team                                     *
 * Computer Systems Laboratory (LSC)                  *
 * IC-UNICAMP                                         *
 * http://www.lsc.ic.unicamp.br                       *
 ******************************************************/
 

#ifndef  _MIPS_ARCH_REF_H
#define  _MIPS_ARCH_REF_H

#include  "mips_parms.H"
#include  "ac_arch_ref.H"
#include  "ac_memport.H"
#include  "ac_reg.H"
#include  "ac_regbank.H"


#include "ac_cache.H"
#include "ac_mem.H"
#include "ac_fifo_replacement_policy.H"
#include "ac_random_replacement_policy.H"
#include "ac_plrum_replacement_policy.H"
#include "ac_lru_replacement_policy.H"
//!Forward class declaration, needed to compile.
class mips_arch;

//!ArchC class for model-specific architectural resources.
class mips_arch_ref : public ac_arch_ref<mips_parms::ac_word, mips_parms::ac_Hword> {
public:
 
  //!Program Counter.
  ac_reg<unsigned>& ac_pc;

  //!Storage Devices.
  ac_memport<mips_parms::ac_word, mips_parms::ac_Hword>& MEM;
  ac_write_back_cache<64, 16, 2, mips_parms::ac_word, ac_memport<mips_parms::ac_word, mips_parms::ac_Hword>, ac_fifo_replacement_policy>& IC;
  ac_memport<mips_parms::ac_word, mips_parms::ac_Hword> &IC_port;
  ac_write_through_cache<256, 16, 2, mips_parms::ac_word, ac_memport<mips_parms::ac_word, mips_parms::ac_Hword>, ac_fifo_replacement_policy>& DC;
  ac_memport<mips_parms::ac_word, mips_parms::ac_Hword> &DC_port;
  ac_regbank<32, mips_parms::ac_word, mips_parms::ac_Dword>& RB;
  ac_reg<mips_parms::ac_word>& npc;
  ac_reg<mips_parms::ac_word>& hi;
  ac_reg<mips_parms::ac_word>& lo;
  ac_reg<mips_parms::ac_word>& id;

  //!Constructor.
   mips_arch_ref(mips_arch& arch);

};

#endif  //_MIPS_ARCH_REF_H
